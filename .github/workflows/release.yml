on:
  push:
    branches:
        - "main"
        - "ci-builds"
    tags:
        - "v*.*.*"

permissions:
    contents: read


env:
  application: "susapad"
  main-folder: "SusaPadSoftware"
  app-icon: "susapad/media/logo.ico"


jobs:

  build:
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash {0}


    steps:

      - name: Checkout
        uses: actions/checkout@v3


      - name: Setup Msys2 (Windows only)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          update: false
          install: >-
            git
            base-devel
          # pacboy: >-
          #   gcc:m
          #   gcc-libs:m


      - name: Configure Msys2 (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          echo "${{ runner.temp }}/msys/msys64/mingw64/bin" >> $env:GITHUB_PATH


      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install pipx
          pipx install poetry==1.4.2


      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
          python-version: "3.10"
          cache: "poetry"


      - name: Install Dependencies
        run: |
          poetry install


      - name: Build SusaPad (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          poetry run nuitka ${{ env.application }}              ^
              --windows-icon-from-ico=${{ env.app-icon }}       ^
              --disable-console                                 ^
              --standalone                                      ^
              --lto=yes                                         ^
              --enable-plugin=pyside6                           ^
              --mingw64 --assume-yes-for-downloads --show-scons
        shell: cmd


      - name: Build SusaPad (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          poetry run nuitka3 ${{ env.application }}             \
              --windows-icon-from-ico=${{ env.app-icon }}       \
              --disable-console                                 \
              --standalone                                      \
              --lto=yes                                         \
              --enable-plugin=pyside6                           \
              --assume-yes-for-downloads --show-scons


      - name: Create Artifact's Folder
        run: |
          mkdir ${{ env.main-folder }}
          mkdir ${{ env.main-folder }}/${{ env.application }}
          mkdir ${{ env.main-folder }}/${{ env.application }}/media

          cp -r ${{ env.application }}.dist/**  ${{ env.main-folder }}/
          cp -r ${{ env.application }}/media/** ${{ env.main-folder }}/${{ env.application }}/media/

          cp LICENSE         ${{ env.main-folder }}/LICENSE
          cp README.md       ${{ env.main-folder }}/README.md
          cp README.pt-br.md ${{ env.main-folder }}/README.pt-br.md
          cp README.es.md    ${{ env.main-folder }}/README.es.md

      - name: Add English Translation
        run: |
          "EN" > ${{ env.main-folder }}/LANG

      - name: Upload Artifact (Windows only) (English)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.application }}-${{ github.ref_name }}-x64-win
          path: "${{ env.main-folder }}"

      - name: Upload Artifact (Linux only) (English)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.application }}-${{ github.ref_name }}-x64-linux
          path: "${{ env.main-folder }}"

      - name: Add Portuguese Translation
        run: |
          "PT" > ${{ env.main-folder }}/LANG

      - name: Upload Artifact (Windows only) (Portuguese)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.application }}-${{ github.ref_name }}-x64-win-pt
          path: "${{ env.main-folder }}"

      - name: Upload Artifact (Linux only) (Portuguese)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.application }}-${{ github.ref_name }}-x64-linux-pt
          path: "${{ env.main-folder }}"


      - name: Add Spanish Translation
        run: |
          "ES" > ${{ env.main-folder }}/LANG

      - name: Upload Artifact (Windows only) (Spanish)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.application }}-${{ github.ref_name }}-x64-win-es
          path: "${{ env.main-folder }}"

      - name: Upload Artifact (Linux only) (Spanish)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.application }}-${{ github.ref_name }}-x64-linux-es
          path: "${{ env.main-folder }}"
